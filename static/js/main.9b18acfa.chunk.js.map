{"version":3,"sources":["logo.svg","services/httpService.js","services/gameService.js","store/actions/gameActions.js","cmps/Header.jsx","cmps/Footer.jsx","pages/Home.jsx","cmps/GamePreview.jsx","cmps/GameList.jsx","pages/Games.jsx","cmps/GameSwiper.jsx","cmps/GameBullets.jsx","cmps/GameDetails.jsx","App.jsx","reportWebVitals.js","store/reducers/gameReducer.js","store/reducers/userReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["BASE_URL","axios","Axios","create","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","window","location","assign","gameService","query","pageNum","PATH","API_KEY","getGameById","gameId","getScreenshots","slug","getSearchResults","setGameScreenshots","dispatch","screenshots","results","map","game","original","image","thumbnail","type","Header","useDispatch","className","to","Footer","href","target","Home","GamePreview","props","useState","id","src","background_image","alt","name","GameList","games","Games","useSelector","state","gameModule","useEffect","gamesFromApi","length","GameSwiper","gameImgs","items","GameBullets","hltbDataForGame","hltbData","gameplayMain","gameplayMainExtra","gameplayCompletionist","developers","released","rating","metacritic","genres","esrb_rating","hltbService","require","HowLongToBeatService","GameDetails","setHltbData","longDescription","setLongDescription","search","hltb","match","getGameByID","err","fetchHltbData","title","onClick","description_raw","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loggedInUser","sessionStorage","loggedinUser","JSON","parse","_id","fullname","imgUrl","users","isLogin","rootReducer","combineReducers","action","filterBy","filterData","userModule","user","filter","userId","score","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b18acfa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.rawg.io/api/';\r\n// const API_KEY = 'e91b2bc088c24679bef700c99473b76d';\r\n\r\nvar axios = Axios.create({});\r\n\r\nexport const httpService = {\r\n  get(endpoint, data) {\r\n    return ajax(endpoint, 'GET', data);\r\n  },\r\n  post(endpoint, data) {\r\n    return ajax(endpoint, 'POST', data);\r\n  },\r\n  put(endpoint, data) {\r\n    return ajax(endpoint, 'PUT', data);\r\n  },\r\n  delete(endpoint, data) {\r\n    return ajax(endpoint, 'DELETE', data);\r\n  },\r\n};\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n  // console.log('url:', `${BASE_URL}${endpoint}`);\r\n  try {\r\n    const res = await axios({\r\n      url: `${BASE_URL}${endpoint}`,\r\n      method,\r\n      data,\r\n      params: method === 'GET' ? data : null,\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.log(\r\n      `Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`\r\n    );\r\n    console.dir(err);\r\n    if (err.response && err.response.status === 401) {\r\n      window.location.assign('/#/login');\r\n    }\r\n    throw err;\r\n  }\r\n}\r\n","import { httpService } from './httpService';\r\n\r\nexport const gameService = {\r\n  query,\r\n  getGameById,\r\n  getScreenshots,\r\n  getSearchResults,\r\n};\r\n\r\nconst PATH = 'games';\r\nconst API_KEY = 'e91b2bc088c24679bef700c99473b76d';\r\n\r\nfunction query(pageNum = 1) {\r\n  return httpService.get(`${PATH}?page=${pageNum}&key=${API_KEY}`);\r\n}\r\n\r\nfunction getGameById(gameId) {\r\n  // console.log(gameId);\r\n  return httpService.get(`${PATH}/${gameId}?key=${API_KEY}`);\r\n}\r\n\r\nfunction getSearchResults(query) {\r\n  return httpService.get(`${PATH}?search=${query}&key=${API_KEY}`);\r\n}\r\n\r\nfunction getScreenshots(slug) {\r\n  // console.log(slug);\r\n  return httpService.get(`${PATH}/${slug}/screenshots?key=${API_KEY}`);\r\n}\r\n","import { gameService } from '../../services/gameService';\r\n\r\nexport function loadGames() {\r\n  return async (dispatch) => {\r\n    try {\r\n      const gamesFromApi = await gameService.query();\r\n      const games = gamesFromApi.results;\r\n      dispatch({ type: 'SET_GAMES', games });\r\n    } catch (err) {\r\n      console.log('GameActions: err in loadGames', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function setSearch(data) {\r\n  const query = data.query;\r\n  return async (dispatch) => {\r\n    try {\r\n      const searchResults = await gameService.getSearchResults(query);\r\n      dispatch({ type: 'SET_SEARCH', results: searchResults.results });\r\n    } catch (err) {\r\n      console.log('GameActions: err in setSearch', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getGameByID(gameId) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const game = await gameService.getGameById(gameId);\r\n      console.log(game);\r\n      setGameScreenshots(game.slug);\r\n      dispatch({ type: 'SET_GAME', game });\r\n    } catch (err) {\r\n      console.log('GameActions: err in getGameByID', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function setGameScreenshots(slug) {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await gameService.getScreenshots(slug);\r\n      const screenshots = response.results.map((game) => {\r\n        return {\r\n          original: game.image,\r\n          thumbnail: game.image,\r\n        };\r\n      });\r\n      console.log(screenshots);\r\n      dispatch({ type: 'SET_SCREENSHOTS', screenshots });\r\n    } catch (err) {\r\n      console.log('GameActions: err in setGameScreenshots', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function clearGame() {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: 'CLEAR_GAME' });\r\n    } catch (err) {}\r\n  };\r\n}\r\n","import { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setSearch } from '../store/actions/gameActions';\r\nexport const Header = () => {\r\n  const dispatch = useDispatch();\r\n  // const searchResults = useSelector((state) => state.gameModule.search);\r\n  // const onSetSearch = (query) => {\r\n  //   // console.log(query.query);\r\n  //   if (query.query === '') return;\r\n  //   dispatch(setSearch(query));\r\n  // };\r\n  return (\r\n    <div className=\"header-container\">\r\n      <NavLink to=\"/\">\r\n        <h2 className=\"title\">Gaming Journal</h2>\r\n      </NavLink>\r\n      <div className=\"nav-links\">\r\n        <NavLink to=\"/\">Home</NavLink>\r\n        <NavLink to=\"/games\">Games</NavLink>\r\n        <NavLink to=\"/profile\">Profile</NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const Footer = () => {\r\n  return (\r\n    <div className=\"main-footer-container\">\r\n      <small>\r\n        Work in progress, made solely by Gil Tarablus. Game data supplied by\r\n        <a href=\"https://rawg.io/\" target=\"blank\">\r\n          {' '}\r\n          RAWG\r\n        </a>\r\n      </small>\r\n    </div>\r\n  );\r\n};\r\n","export const Home = () => {\r\n  return (\r\n    <div className=\"main-home-container\">\r\n      <h1>Hello and welcome to The Gaming Journal</h1>\r\n      <h3>More to come soon...</h3>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const GamePreview = (props) => {\r\n  const [game, setGame] = useState(props.game);\r\n  return (\r\n    <div className=\"game-preview\">\r\n      <Link to={`/games/${game.id}`}>\r\n        <img src={game.background_image} alt=\"\" />\r\n        <h3 className=\"game-preview-title\">{game.name}</h3>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { GamePreview } from './GamePreview';\r\n\r\nexport const GameList = (props) => {\r\n  const [games, setGames] = useState(props.games);\r\n  return (\r\n    <section className=\"game-list\">\r\n      {games.map((game) => {\r\n        return <GamePreview key={game.id} game={game} />;\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { gameService } from '../services/gameService';\r\nimport { GameList } from '../cmps/GameList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadGames } from '../store/actions/gameActions';\r\n\r\nexport const Games = () => {\r\n  const dispatch = useDispatch();\r\n  const games = useSelector((state) => state.gameModule.games);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadGames());\r\n  }, []);\r\n\r\n  return games.length === 0 ? (\r\n    <h1>Loading...</h1>\r\n  ) : (\r\n    <div className=\"main-games-container\">\r\n      <GameList games={games} />\r\n    </div>\r\n  );\r\n};\r\n","import { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { useState } from 'react';\r\nimport 'swiper/swiper.min.css';\r\nimport 'swiper/components/pagination/pagination.min.css';\r\nimport 'swiper/components/navigation/navigation.min.css';\r\n// import SwiperCore, { Pagination, Navigation } from 'swiper/core';\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nexport const GameSwiper = (props) => {\r\n  const gameImgs = props.gameImgs;\r\n  return (\r\n    <div className=\"game-screenshots-container\">\r\n      <ImageGallery items={gameImgs} />\r\n    </div>\r\n  );\r\n};\r\n","export const GameBullets = (props) => {\r\n  const game = props.game;\r\n  let hltbDataForGame = null;\r\n  if (props.hltbData) {\r\n    hltbDataForGame = props.hltbData[0];\r\n  }\r\n  console.log(hltbDataForGame);\r\n  return !hltbDataForGame ? (\r\n    <h1>Loading...</h1>\r\n  ) : (\r\n    <div className=\"game-bullets\">\r\n      <div className=\"game-actions\">\r\n        <button className=\"add-to-favorites-button\">Wishlist</button>\r\n        <button className=\"add-to-favorites-button\">Favorite</button>\r\n      </div>\r\n      <div className=\"game-bullet-details\">\r\n        <p>\r\n          Estimated Time for main story: {hltbDataForGame.gameplayMain} Hours\r\n        </p>\r\n        <p>\r\n          Estimated time for Story + Side: {hltbDataForGame.gameplayMainExtra}\r\n        </p>\r\n        <p>\r\n          Estimated time for Completionist{' '}\r\n          {hltbDataForGame.gameplayCompletionist}\r\n        </p>\r\n        <p>Developer: {game.developers[0].name}</p>\r\n        <p>Release Date: {game.released}</p>\r\n        <p>Average user rating: {game.rating}</p>\r\n        <p>Metacritic rating: {game.metacritic}</p>\r\n        <p>Game genres: {`${game.genres[0].name}, ${game.genres[1].name}`}</p>\r\n        <p>ESRB Rating: {game.esrb_rating.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { GameSwiper } from './GameSwiper';\r\nimport { GameBullets } from './GameBullets';\r\nimport { GameGraphs } from './GameGraphs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getGameByID,\r\n  clearGame,\r\n  setGameScreenshots,\r\n} from '../store/actions/gameActions';\r\nconst hltb = require('howlongtobeat');\r\nconst hltbService = new hltb.HowLongToBeatService();\r\n\r\nexport const GameDetails = (props) => {\r\n  const [hltbData, setHltbData] = useState();\r\n  const [longDescription, setLongDescription] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const game = useSelector((state) => state.gameModule.game);\r\n  const screenshots = useSelector((state) => state.gameModule.screenshots);\r\n\r\n  useEffect(() => {\r\n    const gameId = props.match.params.gameId;\r\n    dispatch(getGameByID(gameId));\r\n    dispatch(setGameScreenshots(gameId));\r\n    return () => {\r\n      dispatch(clearGame());\r\n    };\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (!game) return;\r\n    fetchHltbData(game);\r\n    console.log(game.name);\r\n  }, [game]);\r\n  \r\n  async function fetchHltbData(game) {\r\n    let hltb = await hltbService.search(game.name);\r\n    if (!hltb) {\r\n      hltb = await hltbService.search(game.slug);\r\n    }\r\n    setHltbData(hltb);\r\n  }\r\n\r\n  const toggleLongDescription = () => {\r\n    setLongDescription(!longDescription);\r\n  };\r\n  // console.log(hltbData);\r\n  return !game ? (\r\n    <h1>Loading...</h1>\r\n  ) : (\r\n    <section className=\"main-details-container\">\r\n      <h1 className=\"game-title\">{game.name}</h1>\r\n      <div className=\"game-images-bullets-container\">\r\n        <GameSwiper gameImgs={screenshots} />\r\n        <GameBullets game={game} hltbData={hltbData} />\r\n      </div>\r\n      <div\r\n        title={`Click to ${longDescription ? 'collapse' : 'expand'}`}\r\n        className={`game-description ${longDescription ? 'expanded' : ''}`}\r\n        onClick={() => {\r\n          toggleLongDescription();\r\n        }}\r\n      >\r\n        {game.description_raw}\r\n        <pre></pre>\r\n      </div>\r\n      {/* <div className=\"graph-container\">\r\n        <GameGraphs />\r\n      </div> */}\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Header } from './cmps/Header';\nimport { Footer } from './cmps/Footer';\nimport { Home } from './pages/Home';\nimport { Games } from './pages/Games';\nimport { GameDetails } from './cmps/GameDetails';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <section className=\"main-app-container\">\n        <header>\n          <Header />\n        </header>\n        <main className=\"main-page-container\">\n          <Switch>\n            <Route component={GameDetails} path=\"/games/:gameId\" />\n            <Route component={Games} path=\"/games\" />\n            <Route component={Home} path=\"/\" />\n          </Switch>\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </section>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  games: [],\r\n  game: null,\r\n  // filterBy: {\r\n  //   type: '',\r\n  //   location: '',\r\n  //   date: '',\r\n  //   time: '',\r\n  // },\r\n  search: null,\r\n  screenshots: [],\r\n};\r\n\r\nexport function gameReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_GAMES':\r\n      return { ...state, games: action.games };\r\n    case 'CLEAR_GAME':\r\n      return { ...state, game: null };\r\n    case 'SET_GAME':\r\n      return { ...state, game: action.game };\r\n    case 'SET_FILTER':\r\n      return { ...state, filterBy: action.filterData };\r\n    case 'SET_SEARCH':\r\n      return { ...state, search: action.results };\r\n    case 'SET_SCREENSHOTS':\r\n      return { ...state, screenshots: action.screenshots };\r\n    // case 'ADD_GAME':\r\n    //   return { ...state, games: [...state.games, action.addedGame] };\r\n    // case 'UPDATE_EVENT':\r\n    //   return { ...state, event: action.event };\r\n    // case 'REMOVE_EVENT':\r\n    //   return {\r\n    //     ...state,\r\n    //     events: state.events.filter((event) => event._id !== action.eventId),\r\n    //   };\r\n    // case 'UPDATE_REVIEW':\r\n    //   return {\r\n    //     ...state,\r\n    //     events: state.events.map((event) =>\r\n    //       event._id === action.event._id ? action.event : event\r\n    //     ),\r\n    //   };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","let localLoggedinUser = null;\r\nlocalLoggedinUser = sessionStorage.loggedinUser\r\n  ? JSON.parse(sessionStorage.loggedinUser)\r\n  : { _id: 'u100', fullname: 'Guest', imgUrl: './imgs/guest.jpg' };\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: [],\r\n  isLogin: false,\r\n};\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return {\r\n        ...state,\r\n        loggedInUser: action.user,\r\n        // isLogin:!state.isLogin\r\n      };\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user._id !== action.userId),\r\n      };\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    case 'SET_SCORE':\r\n      return {\r\n        ...state,\r\n        loggedInUser: { ...state.loggedInUser, score: action.score },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { gameReducer } from './gameReducer';\r\nimport { userReducer } from './userReducer';\r\n// import { systemReducer } from './systemReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n  gameModule: gameReducer,\r\n  userModule: userReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/main.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}